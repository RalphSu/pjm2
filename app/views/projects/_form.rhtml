<%= error_messages_for 'project' %>

<div class="box">
<!--[form:project]-->
<p><%= f.text_field :name, :required => true, :size => 60 %></p>

<p><%= f.text_area :description, :rows => 10, :class => 'wiki-edit' %></p>
<%= f.hidden_field :identifier, :required => true, :disabled => @project.identifier_frozen? %>
<% unless @project.identifier_frozen? %>
<script type="text/javascript" charset="utf-8">
  projectIdentifierMaxLength = <%= Project::IDENTIFIER_MAX_LENGTH %>;
  projectIdentifierDefault = '<%= @project.identifier %>';
  projectIdentifierNil = '<%= @project.identifier.nil? %>';
  projectIdentifierLocked = <%= !@project.identifier.blank? %>;
  observeProjectIdentifier();
  observeProjectName();
</script>
<% end %>

<!-- Ralph:: temp -change to add FIXME:: with project model -->
<% if @project.new_record? %>
<p>
  <label for="project_identifier"><%= l(:field_project_manager) %></label><input id="project_identifier" name="project[1identifier]" size="60" type="text"></p>
<p><label for="project_identifier"><%= l(:field_project_reviewer) %></label><input id="project_identifier" name="project[1identifier]" size="60" type="text"></p>
<p><label for="project_identifier"><%= l(:field_project_client) %></label><input id="project_identifier" name="project[1identifier]" size="60" type="text"></p>
<% end %>

<p><%= label(:project, :start_time, l(:field_start_time)) %><%= f.date_field :start_time %></p>
<p><%= label(:project, :end_time, l(:field_end_time)) %><%= f.date_field :end_time %></p>

<%= wikitoolbar_for 'project_description' %>
<!-- 
<% @project.custom_field_values.each do |value| %>
	<p><%= custom_field_tag_with_label :project, value %></p>
<% end %>
<%= call_hook(:view_projects_form, :project => @project, :form => f) %>
</div> -->

<% if @project.new_record? %>
<!--  Ralph:: hide the modules and trackers for screen mock -->
<!--
<fieldset class="box" id="project_modules" style="display:none;"><legend><%= l(:label_module_plural) %> <span style="font-size:0.9em">(<%= check_all_links 'project_modules' %>)</span></legend>
<% Redmine::AccessControl.available_project_modules.each do |m| %>
    <label class="floating">
    <%= check_box_tag 'project[enabled_module_names][]', m, @project.module_enabled?(m), :id => "project_enabled_module_names_#{m}" %>
    <%= l_or_humanize(m, :prefix => "project_module_") %>
    </label>
<% end %>
<%= hidden_field_tag 'project[enabled_module_names][]', '' %>
<%= javascript_tag 'observeProjectModules()' %>
</fieldset>
-->
<% end %>


<!--  Ralph:: hide the modules and trackers for screen mock  if false @project.new_record? || @project.module_enabled?('issue_tracking') -->
<!--
<% unless @trackers.empty? %>
<fieldset class="box" id="project_trackers" style="display:none;"><legend><%=l(:label_tracker_plural)%> <span style="font-size:0.9em">(<%= check_all_links 'project_trackers' %>)</span></legend>
<% @trackers.each do |tracker| %>
    <label class="floating">
    <%= check_box_tag 'project[tracker_ids][]', tracker.id, @project.trackers.include?(tracker) %>
    <%= h(tracker) %>
    </label>
<% end %>
<%= hidden_field_tag 'project[tracker_ids][]', '' %>
</fieldset>
<% end %>
-->

<!--
<% unless @issue_custom_fields.empty? %>
<fieldset class="box" id="project_issue_custom_fields"><legend><%=l(:label_custom_field_plural)%> <span style="font-size:0.9em">(<%= check_all_links 'project_issue_custom_fields' %>)</span></legend>
<% @issue_custom_fields.each do |custom_field| %>
    <label class="floating">
	<%= check_box_tag 'project[issue_custom_field_ids][]', custom_field.id, (@project.all_issue_custom_fields.include? custom_field), (custom_field.is_for_all? ? {:disabled => "disabled"} : {}) %>
	<%= h(custom_field.name) %>
	</label>
<% end %>
<%= hidden_field_tag 'project[issue_custom_field_ids][]', '' %>
</fieldset>
<% end %>
-->

<!--[eoform:project]-->
